{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","components/CartItem/index.js","utils/actions.js","utils/auth.js","utils/queries.js","components/Cart/index.js","components/Footer/index.js","pages/Homepage.js","components/ProductItem/index.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","pages/Success.js","utils/reducers.js","store.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","CartItem","item","dispatch","useDispatch","className","src","image","alt","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","stripePromise","loadStripe","Cart","state","useSelector","useLazyQuery","getCheckout","data","toggleCart","useEffect","a","cart","products","length","getCart","then","res","redirectToCheckout","sessionId","checkout","session","cartOpen","icon","faCheckSquare","faCartPlus","map","key","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","href","Footer","faAddressBook","faEnvelope","faPhoneVolume","Homepage","to","ProductItem","quantity","count","pluralize","itemInCart","find","cartItem","product","ProductList","currentCategory","useQuery","loading","filter","category","spinner","CategoryMenu","categories","categoryData","id","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Success","addOrder","setTimeout","saveOrder","defaultState","categoriesOpen","rootReducer","action","newState","createStore","Nav","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a95e6c47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + \"s\";\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open(\"shop-shop\", 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore(\"products\", { keyPath: \"_id\" });\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    // on database open success\n    request.onsuccess = function (e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, \"readwrite\");\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        {/* <img src={`../../../public/images/${item.image}`} alt=\"\" /> */}\n        <img src={`/images/${item.image}`} alt=\"\" />\n      </div>\n      <div>\n        <div>\n          {item.name}, ${item.price}\n        </div>\n        <div>\n          <span>Qty:</span>\n          {/* <input type=\"number\" placeholder=\"1\" value={item.purchaseQuantity} /> */}\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          {/* <span role=\"img\" aria-label=\"trash\">\n            🗑️\n          </span> */}\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\n\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare, faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n  console.log(state);\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        X\n      </div>\n      <h2>Shopping Cart</h2>\n       <h4><FontAwesomeIcon icon={faCheckSquare}/>\n         Your <FontAwesomeIcon icon={faCartPlus} /> is sorted and ready!</h4><br></br>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n            {Auth.loggedIn() ? (\n              //   <button>Checkout</button>\n              <>\n            \n              <button onClick={submitCheckout}>Checkout</button>\n    </>\n            ) : (\n              <span className=\"checkout\"><a href=\"/login\">Login to checkout</a></span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          Your cart is empty, start shopping!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import {\n  faAddressBook,\n  faEnvelope,\n  faPhoneVolume,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"container footer\">\n        <div className=\"column\">\n          <h5>About</h5>\n          <p>\n            Sed ut perspiciatis, unde omnis iste natus error sit voluptatem\n            accusantium doloremque laudantium, totam rem aperiam eaque ipsa,\n            quae ab illo inventore veritatis et quasi architecto beatae vitae\n            dicta sunt, explicabo.{\" \"}\n          </p>\n        </div>\n        <div className=\"column\">\n          <h5>\n            <FontAwesomeIcon icon={faAddressBook} /> Contact\n          </h5>\n          <p>\n            <FontAwesomeIcon icon={faEnvelope} /> aungonalna58@gmail.com\n          </p>\n          <p>\n            <FontAwesomeIcon icon={faPhoneVolume} /> +1 7757425989\n          </p>\n        </div>\n        <div className=\"column\">\n          <p>Copyright reserved@2022 Alma's Productions</p>\n          <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n\n          <FontAwesomeIcon icon={[\"fab\", \"facebook\"]} />\n\n          <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} />\n\n          <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n\n          <div className=\"subscribe-form\">\n            <input type=\"text\" placeholder=\"example@gmail.com\"></input>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link} from 'react-router-dom';\nimport Cart from '../components/Cart';\nimport Footer from \"../components/Footer\";\n\nconst Homepage = () => {\n  return (\n    <>\n    <div className=\"container\">\n      <div className='flex-container '> \n          <div className='intro m-5'>\n         <h1 className='title'>Select@Collect is your local family shopping center</h1>\n\n          <p>Welcome to Select@Collect - one of the most family friendly and cheapest places on earth. Our market offers many of your favorite daily needs products including clothes, foods, apliances, devices, books, and more with twist. What’s the twist? Lots of joy with some useful and quality items. We believe that quality makes joyful buyers. It also helped us to grow to be the biggest retail chains in the market. So share this with your family and your friends - There is nothing like shopping  with joyfulness with the ones you love.</p><br>\n          </br>\n         <Link to=\"/home\" ><button className=\"start-btn\">Start Order</button>\n         </Link>\n        </div>\n            <div className='home-hero'>\n            <img src='https://cdn.imgbin.com/10/24/20/imgbin-shopping-bag-drawing-illustration-an-umbrella-man-woman-holding-paper-bag-and-umbrella-ZK535jcqPUUQmwTxjYRUUdWBi.jpg' alt='meme'/>\n            </div>\n        </div>\n        <Cart />\n    </div>\n    <Footer/>\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const { image, name, _id, price, quantity } = item;\n\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    // if there was a match, call UPDATE with a new purchase quantity\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n        <span>Price: ${price}</span>\n      </div>\n      <button className=\"addcart-btns\" onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","// import React from 'react';\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport spinner from \"../../assets/spinner.gif\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductList() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    // if there's data to be stored\n    if (data) {\n      // let's store it in the global state object\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      // but let's also take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } // add else if to check if `loading` is undefined in `useQuery()` Hook\n    else if (!loading) {\n      // since we're offline, get all of the data from the `products` store\n      idbPromise(\"products\", \"get\").then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from \"react\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction CategoryMenu() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  \n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className=\"categories-section\">\n      <h2>Categories</h2>\n      {categories.map((item) => (\n        <button className=\"categories-btn\"\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","// import React, { useState } from \"react\";\nimport React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport Footer from \"../components/Footer\";\n\nconst Home = () => {\n  return (\n    <>\n    <div className=\"container\">\n        <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n    <Footer/>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from \"../assets/spinner.gif\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\n\nimport Cart from \"../components/Cart\";\nimport Footer from \"../components/Footer\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n    // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{\" \"}\n            <button className=\"addcart-btns\" onClick={addToCart}>Add to Cart</button>\n            <button className=\"removed-btns\"\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n      <Footer/>\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Footer from '../components/Footer';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n    <div className=\"container my-1\">\n      <form onSubmit={handleFormSubmit}>\n      <h2>Login</h2>\n    \n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n       \n       \n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n       \n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button className='submit' type=\"submit\">Submit</button>\n          <Link to=\"/signup\"><button className='login'>Create account</button></Link>\n\n        </div>\n      </form>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport Footer from '../components/Footer';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n    <div className=\"container my-1\">\n      <form onSubmit={handleFormSubmit}>\n      <h2>Signup</h2>\n\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        \n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n       \n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        \n        <div className=\"flex-row flex-end\">\n          <button className='submit' type=\"submit\">Submit</button>\n          <Link to=\"/login\"><button className='login'>Login instead</button></Link>\n        </div>\n      </form>\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART,\n\n} from \"./actions\";\n\nconst defaultState = {\n  products: [],\n  categories: [],\n  currentCategory: \"\",\n  cart: [],\n  cartOpen: false,\n  categoriesOpen: false,\n};\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    // if it's none of these actions, do not update state at all and keep things the same!\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./utils/reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          Select@Collect\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Homepage from \"./pages/Homepage\";\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Success from \"./pages/Success\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Nav from \"./components/Nav\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Homepage}/>\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}